Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\n    <type id=\"android\" />\n  </component>\n  <component name=\"ProjectPlainTextFileTypeManager\">\n    <file url=\"file://$PROJECT_DIR$/app/src/main/res/drawable/ic_group_8221.xml\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 7c24d354532a42993c9906e466d6d4caf608fdc5)
+++ .idea/misc.xml	(date 1625398622154)
@@ -6,7 +6,7 @@
   <component name="ProjectPlainTextFileTypeManager">
     <file url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_group_8221.xml" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: flutter_module/lib/screens/translationScreen/translationScreenView.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:io';\nimport 'package:flutter/material.dart';\nimport 'package:camera/camera.dart' as cameraPlugin;\nimport 'package:flutter/services.dart';\nimport 'package:flutter_module/packages/bottomBarView.dart';\nimport 'package:path_provider/path_provider.dart' as path_provider;\n\nclass TranslationScreen extends StatelessWidget {\n  final cameraPlugin.XFile image;\n  TranslationScreen({this.image});\n  @override\n  Widget build(BuildContext context) {\n    return TranslationScreenView(\n      image: image,\n    );\n  }\n}\n\nclass TranslationScreenView extends StatelessWidget {\n  double screenWidth, screenHeight, screenTopPadding;\n  cameraPlugin.XFile image;\n  TranslationScreenView({this.image});\n  @override\n  Widget build(BuildContext context) {\n    screenWidth = MediaQuery.of(context).size.width;\n    screenHeight = MediaQuery.of(context).size.height;\n    screenTopPadding = MediaQuery.of(context).viewPadding.top;\n    return Scaffold(\n      body: Container(\n        color: Colors.white,\n        child: Stack(\n          children: [\n            //image\n            Positioned(\n                top: 0,\n                height: screenHeight * 0.37,\n                width: screenWidth,\n                child: Container(\n                    color: Colors.white,\n                    child: Image.asset(\"assets/images/tempImage.png\",\n                        fit: BoxFit.fill)\n                    // Image.file(File(image.path), fit: BoxFit.fill)\n                    )),\n            // translation\n            Positioned(\n                top: screenHeight * 0.3 + screenTopPadding,\n                child: Container(\n                  width: screenWidth,\n                  height: screenHeight * 0.7,\n                  decoration: BoxDecoration(\n                      color: Colors.white,\n                      boxShadow: [\n                        BoxShadow(\n                          color: Colors.black.withOpacity(0.2),\n                          spreadRadius: 3,\n                          blurRadius: 5,\n                          offset: Offset(0, 3), // changes position of shadow\n                        ),\n                      ],\n                      borderRadius: BorderRadius.only(\n                          topLeft: Radius.circular(screenHeight * 0.07),\n                          topRight: Radius.circular(screenHeight * 0.07))),\n                  child: ClipRRect(\n                    borderRadius: BorderRadius.only(\n                        topLeft: Radius.circular(screenHeight * 0.07),\n                        topRight: Radius.circular(screenHeight * 0.07)),\n                    child: Theme(\n                      data: ThemeData(\n                        accentColor: Color(0x33fbc02d),\n                      ),\n                      child: SingleChildScrollView(\n                        child: Container(\n                          width: screenWidth,\n                          height: screenHeight * 0.8,\n                          child: Stack(\n                            children: [\n                              //Title\n                              Positioned(\n                                  //parent height: screenHeight * 0.7,\n                                  top: screenHeight * 0.04,\n                                  left: screenHeight * 0.04,\n                                  child: Text(\n                                    \"Heiroglyphic Translation\",\n                                    style: TextStyle(\n                                        fontSize: screenHeight * 0.026,\n                                        fontWeight: FontWeight.w400),\n                                  )),\n                              // translation Title\n                              Positioned(\n                                  //parent height: screenHeight * 0.7,\n                                  top: screenHeight * 0.12,\n                                  left: screenHeight * 0.04,\n                                  child: Text(\n                                    \"Translation\",\n                                    style: TextStyle(\n                                        fontSize: screenHeight * 0.022,\n                                        fontWeight: FontWeight.w600),\n                                  )),\n                              // translation text\n                              Positioned(\n                                  //parent height: screenHeight * 0.7,\n                                  top: screenHeight * 0.16,\n                                  left: screenHeight * 0.04,\n                                  child: Container(\n                                    width: screenWidth - screenHeight * 0.08,\n                                    child: Text(\n                                      \"This is a temp translation till a proper image passed to the model\",\n                                      style: TextStyle(\n                                          fontSize: screenHeight * 0.022,\n                                          fontWeight: FontWeight.w300),\n                                    ),\n                                  )),\n                              // Analyzed image Title\n                              Positioned(\n                                  //parent height: screenHeight * 0.7,\n                                  top: screenHeight * 0.25,\n                                  left: screenHeight * 0.04,\n                                  child: Text(\n                                    \"Analyzed image\",\n                                    style: TextStyle(\n                                        fontSize: screenHeight * 0.022,\n                                        fontWeight: FontWeight.w600),\n                                  )),\n                              // Analyzed image content\n                              Positioned(\n                                  top: screenHeight * 0.3,\n                                  left: screenHeight * 0.04,\n                                  child: Container(\n                                      child: Row(\n                                    children: [\n                                      Container(\n                                          padding: EdgeInsets.only(right: 16),\n                                          child: Image.asset(\n                                            \"assets/icons/icon1.png\",\n                                          )),\n                                      Container(\n                                          child: Image.asset(\n                                        \"assets/icons/icon2.png\",\n                                      )),\n                                    ],\n                                  ))),\n                              // extra draw\n                              Positioned(\n                                  top: screenHeight * 0.4,\n                                  child: Container(\n                                    padding: EdgeInsets.only(\n                                        top: 20, bottom: 20, right: 10),\n                                    width: screenHeight * 0.1,\n                                    height: screenHeight * 0.25,\n                                    decoration: BoxDecoration(\n                                      color: Color(0xfffbc02d),\n                                      borderRadius: BorderRadius.only(\n                                          bottomRight: Radius.circular(\n                                              screenHeight * 0.07),\n                                          topRight: Radius.circular(\n                                              screenHeight * 0.07)),\n                                    ),\n                                    child:\n                                        Image.asset(\"assets/icons/icon3.png\"),\n                                  ))\n                            ],\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                )),\n            // saving button\n            Positioned(\n                top: screenHeight * 0.28,\n                right: screenWidth * 0.05,\n                child: InkWell(\n                  onTap: () async {\n                    final directory =\n                        await path_provider.getExternalStorageDirectory();\n                    String _localPath = directory.path;\n                    File myfile = File('$_localPath/data.json');\n                    await myfile.writeAsString({\n                      \"symbolsList\": [\n                        [\"A15\", \"E1\", \"C23\"]\n                      ],\n                      \"translationList\": [\"hello panda\"],\n                      \"imageName\":\"the name of the image\",\n                    }.toString());\n                    SystemNavigator.pop();\n                  },\n                  child: Image.asset(\n                    'assets/icons/icon.png',\n                    width: screenHeight * 0.1,\n                    height: screenHeight * 0.1,\n                  ),\n                )),\n            // the bottom navigationbar\n            Positioned(\n              bottom: 0,\n              child: BottomNavigationBarPainted(\n                icons: [\n                  \"assets/icons/bottomNavigationBar/home.png\",\n                  \"assets/icons/bottomNavigationBar/photo-camera.png\",\n                  \"assets/icons/bottomNavigationBar/add-bookmark.png\"\n                ],\n                texts: [\"Explore\", \"My Translation\"],\n                iconsColors: [\n                  Color(0xffffd600),\n                  Colors.white,\n                  Color(0xffb6b7b7)\n                ],\n                functions: [\n                  () {\n                    // back to home screen\n                    // for now will open it in a snake bar\n                    SnackBar snackBar = SnackBar(\n                      content: Text(\n                        'Go To HomeScreen',\n                        textAlign: TextAlign.center,\n                      ),\n                      duration: Duration(seconds: 2),\n                    );\n                    ScaffoldMessenger.of(context).showSnackBar(snackBar);\n                  },\n                  () async {\n                    // capture an image\n                    print(\"go to capture\");\n                  },\n                  () async {\n                    // go to My Translation\n                    // for now will open it in a snake bar\n                    SnackBar snackBar = SnackBar(\n                      content: Text(\n                        'Go To My Translation',\n                        textAlign: TextAlign.center,\n                      ),\n                      duration: Duration(seconds: 2),\n                    );\n                    ScaffoldMessenger.of(context).showSnackBar(snackBar);\n                  },\n                ],\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- flutter_module/lib/screens/translationScreen/translationScreenView.dart	(revision 7c24d354532a42993c9906e466d6d4caf608fdc5)
+++ flutter_module/lib/screens/translationScreen/translationScreenView.dart	(date 1625405829640)
@@ -180,8 +180,9 @@
                         ["A15", "E1", "C23"]
                       ],
                       "translationList": ["hello panda"],
-                      "imageName":"the name of the image",
+                      "imageName":"image.jpg"
                     }.toString());
+                    // TODO: save the image
                     SystemNavigator.pop();
                   },
                   child: Image.asset(
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"disableWrapperSourceDistributionNotification\" value=\"true\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"1.8\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n            <option value=\"$PROJECT_DIR$/flutter_module\" />\n            <option value=\"$PROJECT_DIR$/flutter_module/.android/Flutter\" />\n            <option value=\"$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/camera-0.8.1+3/android\" />\n            <option value=\"$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_plugin_android_lifecycle-2.0.2/android\" />\n            <option value=\"$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker-0.7.5+4/android\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 7c24d354532a42993c9906e466d6d4caf608fdc5)
+++ .idea/gradle.xml	(date 1625398621498)
@@ -15,13 +15,13 @@
             <option value="$PROJECT_DIR$/app" />
             <option value="$PROJECT_DIR$/flutter_module" />
             <option value="$PROJECT_DIR$/flutter_module/.android/Flutter" />
-            <option value="$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/camera-0.8.1+3/android" />
-            <option value="$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_plugin_android_lifecycle-2.0.2/android" />
-            <option value="$USER_HOME$/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker-0.7.5+4/android" />
+            <option value="$PROJECT_DIR$/../snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/camera-0.8.1+3/android" />
+            <option value="$PROJECT_DIR$/../snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_plugin_android_lifecycle-2.0.2/android" />
+            <option value="$PROJECT_DIR$/../snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker-0.7.5+4/android" />
+            <option value="$PROJECT_DIR$/../snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider-2.0.2/android" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
